const ace = require('brace');
require('brace/mode/javascript');
require('brace/theme/monokai');

import { shouldBeRedirectedToLogin } from '../support/assertions';

describe('Dashboard Collections Page', () => {
  describe('When not logged in', () => {
    it('should redirect to login page', () => {
      cy.visit('/#/collections');
      shouldBeRedirectedToLogin();
    });
  });

  describe('When logged in', () => {
    beforeEach(() => {
      cy.login();
    });

    it('displays a link to view collections', () => {
      cy.visit('/');

      cy.get('nav li a').contains('Collections').should('exist').as('collections');
      cy.get('@collections').should('have.attr', 'href', '#/collections');
      cy.get('@collections').click();

      cy.url().should('include', 'collections');
      cy.get('.heading--xlarge').should('have.text', 'Collections');

      cy.get('table tbody tr').its('length').should('be.gt', 1);
    });

    it('collections page displays a button to add a new collection', () => {
      cy.visit('/#/collections');

      cy.get('.heading--large').should('have.text', 'Collection Overview');
      cy.get('a').contains('Add a Collection').should('exist').as('addCollection');
      cy.get('@addCollection').should('have.attr', 'href', '#/collections/add');
      cy.get('@addCollection').click();

      // fill the form and submit
      const collection = '{{}"name":"TESTCOLLECTION","version":"006","dataType":"TESTCOLLECTION", "duplicateHandling":"error"}';
      const name = 'TESTCOLLECTION';
      const version = '006';
      cy.get('textarea').type(collection, {force: true});
      cy.get('form').get('input').contains('Submit').click();

      // displays the new collection
      cy.get('.heading--xlarge').should('have.text', 'Collections');
      cy.get('.heading--large').should('have.text', 'TESTCOLLECTION / 006');
      cy.url().should('include', '#/collections/collection/TESTCOLLECTION/006');

      // verify the new collection is added to the collections list
      cy.get('a').contains('Back to Collections').click();
      cy.get('table tbody tr').its('length').should('be.gt', 1);
      cy.get(`table tr[data-value="${name}___${version}"]`)
        .should('exist')
        .within(() => {
          cy.contains(`${version}`).should('exist');
          cy.contains('a', `${name}`)
            .should('exist')
            .and('have.attr', 'href', `#/collections/collection/${name}/${version}`);
        });
    });

    it('collection page has button to edit the collection', () => {
      const name = 'TESTCOLLECTION';
      const version = '006';
      cy.visit(`/#/collections/collection/${name}/${version}`);
      cy.get('a').contains('Edit').should('exist').as('editCollection');
      cy.get('@editCollection').should('have.attr', 'href').and('include', '#/collections/edit/TESTCOLLECTION/006');
      cy.get('@editCollection').click();

      cy.get('.heading--large').should('have.text', 'Edit TESTCOLLECTION___006');

      // cy.clear doesn't work for textarea, maybe because the form is generated by react which uses ace editor,
      // or it's related to https://github.com/cypress-io/cypress/issues/2056
      // use ace editor to update the form content, the updated content doesn't show up in the snapshot, but
      // it shows in the console under 'form #edit-TESTCOLLECTION___006 ace_content'.
      // for some reason, the updated content is not submitted with the form
      const collection = '{{}"name":"TESTCOLLECTION","version":"006","dataType":"TESTCOLLECTION", "duplicateHandling":"replace"}';
      cy.get('.ace_editor').then((ele) => {
        const editor = ace.edit(ele[0]);
        editor.setValue(collection);
      });

      cy.get('form input').contains('Submit').click();

      // displays the updated collection and its granules
      cy.get('.heading--xlarge').should('have.text', 'Collections');
      cy.get('.heading--large').should('have.text', 'TESTCOLLECTION / 006');

      // verify the collection is updated by looking at the Edit page
      // cy.get('a').contains('Edit').should('exist').click();
      // cy.get('.heading--large').should('have.text', 'Edit TESTCOLLECTION___006');
      // cy.get('form .ace_content').contains('"duplicateHandling": "replace"').should('exist');
    });

    it('collection page has button to delete the collection', () => {
      const name = 'TESTCOLLECTION';
      const version = '006';
      cy.visit(`/#/collections/collection/${name}/${version}`);

      // delete collection
      cy.get('button').contains('Delete').should('exist').click();
      cy.get('button').contains('Confirm').click();

      // verify the collection is now gone
      cy.url().should('include', 'collections');
      cy.get('.heading--xlarge').should('have.text', 'Collections');
      cy.get('table tbody tr').its('length').should('be.gt', 1);
      cy.get(`table tr[data-value="${name}___${version}"]`).should('not.exist');
    });
  });
});
